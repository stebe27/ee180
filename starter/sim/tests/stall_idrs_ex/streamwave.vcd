$date
	Sun Mar  4 19:04:18 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module userlogic_test $end
$var wire 32 ! data_out [31:0] $end
$var wire 15 " input_buffer_addr [14:0] $end
$var wire 15 # output_buffer_addr [14:0] $end
$var wire 32 $ ul_instr [31:0] $end
$var wire 32 % ul_instr_addr [31:0] $end
$var wire 32 & ul_read_addr [31:0] $end
$var wire 32 ' ul_read_data [31:0] $end
$var wire 32 ( ul_status [31:0] $end
$var wire 32 ) ul_test [31:0] $end
$var wire 32 * ul_write_addr [31:0] $end
$var wire 32 + ul_write_data [31:0] $end
$var wire 16 , ul_write_data_hi [15:0] $end
$var wire 16 - ul_write_data_lo [15:0] $end
$var wire 2 . ul_write_en_hi [1:0] $end
$var wire 2 / ul_write_en_lo [1:0] $end
$var reg 1 0 clk $end
$var reg 32 1 cycle_count [32:1] $end
$var integer 32 2 dump_vars [31:0] $end
$var reg 8192 3 dump_vars_filename [8192:1] $end
$var integer 32 4 i [31:0] $end
$var reg 10 5 image_n_columns [9:0] $end
$var reg 10 6 image_n_rows [9:0] $end
$var reg 8192 7 input_buffer_filename [8192:1] $end
$var reg 8192 8 instr_mem_filename [8192:1] $end
$var reg 32 9 num_cycles [32:1] $end
$var reg 33 : out_end_addr [32:0] $end
$var reg 33 ; out_start_addr [32:0] $end
$var integer 32 < outfile [31:0] $end
$var reg 8192 = output_buffer_filename [8192:1] $end
$var reg 15 > read_addr [14:0] $end
$var integer 32 ? read_input_buffer [31:0] $end
$var integer 32 @ read_instr_mem [31:0] $end
$var integer 32 A result [31:0] $end
$var reg 1 B rst_n $end
$var reg 8192 C test_result_filename [8192:1] $end
$var reg 32 D ul_command [31:0] $end
$var integer 32 E write_output_buffer [31:0] $end
$var integer 32 F write_test_result [31:0] $end
$scope module instr_mem $end
$var wire 14 G addr [13:0] $end
$var wire 1 H clk $end
$var wire 32 I din [31:0] $end
$var wire 1 J we $end
$var reg 32 K dout [31:0] $end
$upscope $end
$scope module input_buffer $end
$var wire 15 L addr [14:0] $end
$var wire 1 H clk $end
$var wire 32 M din [31:0] $end
$var wire 1 N we $end
$var reg 32 O dout [31:0] $end
$upscope $end
$scope module output_buffer $end
$var wire 15 P addr [14:0] $end
$var wire 1 H clk $end
$var wire 32 Q din [31:0] $end
$var wire 4 R we [3:0] $end
$var reg 32 S dout [31:0] $end
$scope begin column[0] $end
$upscope $end
$scope begin column[1] $end
$upscope $end
$scope begin column[2] $end
$upscope $end
$scope begin column[3] $end
$upscope $end
$upscope $end
$scope module ul $end
$var wire 1 T addr_cmd $end
$var wire 1 U addr_iobuf $end
$var wire 1 V addr_local $end
$var wire 1 W addr_status $end
$var wire 1 X addr_test $end
$var wire 1 H clk $end
$var wire 32 Y command [31:0] $end
$var wire 32 Z instr [31:0] $end
$var wire 32 [ instr_addr [31:0] $end
$var wire 32 \ mips_addr [31:0] $end
$var wire 32 ] mips_local_read_data [31:0] $end
$var wire 32 ^ mips_pc [31:0] $end
$var wire 32 _ mips_read_data [31:0] $end
$var wire 1 ` mips_read_en $end
$var wire 4 a mips_write_en [3:0] $end
$var wire 32 b read_addr_hi [31:0] $end
$var wire 32 c read_addr_lo [31:0] $end
$var wire 32 d read_data [31:0] $end
$var wire 16 e read_data_hi [15:0] $end
$var wire 16 f read_data_lo [15:0] $end
$var wire 1 g rst_n $end
$var wire 32 h status [31:0] $end
$var wire 32 i test [31:0] $end
$var wire 32 j write_addr_hi [31:0] $end
$var wire 32 k write_addr_lo [31:0] $end
$var wire 32 l write_data [31:0] $end
$var wire 16 m write_data_hi [15:0] $end
$var wire 16 n write_data_lo [15:0] $end
$var wire 2 o write_en_hi [1:0] $end
$var wire 2 p write_en_lo [1:0] $end
$var reg 32 q cmd_d [31:0] $end
$var reg 1 r read_cmd_d $end
$var reg 1 s read_iobuf_d $end
$var reg 32 t status_reg [31:0] $end
$var reg 32 u test_reg [31:0] $end
$scope module cpu $end
$var wire 32 v alu_op_x_ex [31:0] $end
$var wire 32 w alu_op_x_id [31:0] $end
$var wire 32 x alu_op_y_ex [31:0] $end
$var wire 32 y alu_op_y_id [31:0] $end
$var wire 1 z alu_op_y_zero_ex $end
$var wire 4 { alu_opcode_ex [3:0] $end
$var wire 4 | alu_opcode_id [3:0] $end
$var wire 1 } alu_overflow $end
$var wire 32 ~ alu_result_ex [31:0] $end
$var wire 32 !" alu_result_mem [31:0] $end
$var wire 32 "" alu_sc_result_ex [31:0] $end
$var wire 1 #" atomic_en $end
$var wire 1 H clk $end
$var wire 1 $" en $end
$var wire 1 %" en_if $end
$var wire 32 &" instr [31:0] $end
$var wire 32 '" instr_id [31:0] $end
$var wire 30 (" instr_number_id [29:0] $end
$var wire 32 )" instr_sav [31:0] $end
$var wire 32 *" jr_pc_id [31:0] $end
$var wire 1 +" jump_branch_id $end
$var wire 1 ," jump_reg_id $end
$var wire 1 -" jump_target_id $end
$var wire 32 ." mem_addr [31:0] $end
$var wire 1 /" mem_atomic_ex $end
$var wire 1 0" mem_atomic_id $end
$var wire 1 1" mem_byte_ex $end
$var wire 1 2" mem_byte_id $end
$var wire 1 3" mem_byte_mem $end
$var wire 32 4" mem_out [31:0] $end
$var wire 32 5" mem_read_data [31:0] $end
$var wire 32 6" mem_read_data_byte_extend [31:0] $end
$var wire 8 7" mem_read_data_byte_select [7:0] $end
$var wire 1 ` mem_read_en $end
$var wire 1 8" mem_read_ex $end
$var wire 1 9" mem_read_id $end
$var wire 1 :" mem_read_mem $end
$var wire 1 ;" mem_sc_ex $end
$var wire 1 <" mem_sc_id $end
$var wire 1 =" mem_sc_mask_id $end
$var wire 1 >" mem_signextend_ex $end
$var wire 1 ?" mem_signextend_id $end
$var wire 1 @" mem_signextend_mem $end
$var wire 1 A" mem_we_ex $end
$var wire 1 B" mem_we_id $end
$var wire 32 C" mem_write_data [31:0] $end
$var wire 32 D" mem_write_data_ex [31:0] $end
$var wire 32 E" mem_write_data_id [31:0] $end
$var wire 4 F" mem_write_en [3:0] $end
$var wire 1 G" movn_ex $end
$var wire 1 H" movn_id $end
$var wire 1 I" movz_ex $end
$var wire 1 J" movz_id $end
$var wire 32 K" pc [31:0] $end
$var wire 32 L" pc_id [31:0] $end
$var wire 32 M" pc_if [31:0] $end
$var wire 1 N" reg_we_cond_ex $end
$var wire 1 O" reg_we_ex $end
$var wire 1 P" reg_we_id $end
$var wire 1 Q" reg_we_mem $end
$var wire 1 R" reg_we_wb $end
$var wire 5 S" reg_write_addr_ex [4:0] $end
$var wire 5 T" reg_write_addr_id [4:0] $end
$var wire 5 U" reg_write_addr_mem [4:0] $end
$var wire 5 V" reg_write_addr_wb [4:0] $end
$var wire 32 W" reg_write_data_mem [31:0] $end
$var wire 32 X" reg_write_data_wb [31:0] $end
$var wire 5 Y" rs_addr_id [4:0] $end
$var wire 32 Z" rs_data_id [31:0] $end
$var wire 1 [" rst $end
$var wire 1 \" rst_id $end
$var wire 5 ]" rt_addr_id [4:0] $end
$var wire 32 ^" rt_data_id [31:0] $end
$var wire 32 _" sc_result [31:0] $end
$var wire 1 `" stall $end
$var wire 1 a" stall_r $end
$scope module if_stage $end
$var wire 32 b" b_addr [31:0] $end
$var wire 1 H clk $end
$var wire 1 %" en $end
$var wire 26 c" instr_id [25:0] $end
$var wire 32 d" j_addr [31:0] $end
$var wire 32 e" jr_pc [31:0] $end
$var wire 1 +" jump_branch $end
$var wire 1 ," jump_register $end
$var wire 1 -" jump_target $end
$var wire 32 f" pc [31:0] $end
$var wire 32 g" pc_id [31:0] $end
$var wire 32 h" pc_id_p4 [31:0] $end
$var wire 32 i" pc_next [31:0] $end
$var wire 1 [" rst $end
$scope module pc_reg $end
$var wire 1 H clk $end
$var wire 32 j" d [31:0] $end
$var wire 1 %" en $end
$var wire 1 [" r $end
$var reg 32 k" q [31:0] $end
$upscope $end
$upscope $end
$scope module pc_if2id $end
$var wire 1 H clk $end
$var wire 32 l" d [31:0] $end
$var wire 1 %" en $end
$var wire 1 [" r $end
$var reg 32 m" q [31:0] $end
$upscope $end
$scope module instr_sav_dff $end
$var wire 1 H clk $end
$var wire 32 n" d [31:0] $end
$var wire 1 $" en $end
$var wire 1 [" r $end
$var reg 32 o" q [31:0] $end
$upscope $end
$scope module stall_f_dff $end
$var wire 1 H clk $end
$var wire 1 `" d $end
$var wire 1 $" en $end
$var wire 1 [" r $end
$var reg 1 p" q $end
$upscope $end
$scope module d_stage $end
$var wire 32 q" alu_op_x [31:0] $end
$var wire 32 r" alu_op_y [31:0] $end
$var wire 32 s" alu_result_ex [31:0] $end
$var wire 1 /" atomic_ex $end
$var wire 1 0" atomic_id $end
$var wire 1 t" forward_rs_mem $end
$var wire 6 u" funct [5:0] $end
$var wire 32 v" imm [31:0] $end
$var wire 32 w" imm_sign_extend [31:0] $end
$var wire 32 x" imm_upper [31:0] $end
$var wire 32 y" imm_zero_extend [31:0] $end
$var wire 16 z" immediate [15:0] $end
$var wire 32 {" instr [31:0] $end
$var wire 1 |" isALUImm $end
$var wire 1 }" isBEQ $end
$var wire 1 ~" isBGEZAL $end
$var wire 1 !# isBGEZNL $end
$var wire 1 "# isBGTZ $end
$var wire 1 ## isBLEZ $end
$var wire 1 $# isBLTZAL $end
$var wire 1 %# isBLTZNL $end
$var wire 1 &# isBNE $end
$var wire 1 '# isBranchLink $end
$var wire 1 (# isEqual $end
$var wire 1 )# isJ $end
$var wire 1 *# isJAL $end
$var wire 1 +# isJALR $end
$var wire 1 ,# isJR $end
$var wire 1 -# isLTEZ $end
$var wire 1 .# isLTZ $end
$var wire 1 /# isLUI $end
$var wire 1 0# isSLL $end
$var wire 1 1# isSLLV $end
$var wire 1 2# isSRA $end
$var wire 1 3# isSRAV $end
$var wire 1 4# isSRL $end
$var wire 1 5# isSRLV $end
$var wire 1 6# isShift $end
$var wire 1 7# isShiftImm $end
$var wire 32 8# jr_pc [31:0] $end
$var wire 1 +" jump_branch $end
$var wire 1 ," jump_reg $end
$var wire 1 -" jump_target $end
$var wire 1 2" mem_byte $end
$var wire 1 9" mem_read $end
$var wire 1 8" mem_read_ex $end
$var wire 1 <" mem_sc_id $end
$var wire 1 =" mem_sc_mask_id $end
$var wire 1 ?" mem_signextend $end
$var wire 1 B" mem_we $end
$var wire 32 9# mem_write_data [31:0] $end
$var wire 1 H" movn $end
$var wire 1 J" movz $end
$var wire 6 :# op [5:0] $end
$var wire 32 ;# pc [31:0] $end
$var wire 5 <# rd_addr [4:0] $end
$var wire 1 =# read_from_rs $end
$var wire 1 ># read_from_rt $end
$var wire 1 P" reg_we $end
$var wire 1 O" reg_we_ex $end
$var wire 1 Q" reg_we_mem $end
$var wire 5 ?# reg_write_addr [4:0] $end
$var wire 5 @# reg_write_addr_ex [4:0] $end
$var wire 5 A# reg_write_addr_mem [4:0] $end
$var wire 32 B# reg_write_data_mem [31:0] $end
$var wire 5 C# rs_addr [4:0] $end
$var wire 32 D# rs_data [31:0] $end
$var wire 32 E# rs_data_in [31:0] $end
$var wire 32 F# rs_data_signed [31:0] $end
$var wire 1 G# rs_mem_dependency $end
$var wire 5 H# rt_addr [4:0] $end
$var wire 32 I# rt_data [31:0] $end
$var wire 32 J# rt_data_in [31:0] $end
$var wire 5 K# shamt [4:0] $end
$var wire 32 L# shift_amount [31:0] $end
$var wire 1 `" stall $end
$var wire 1 M# use_imm $end
$var reg 4 N# alu_opcode [3:0] $end
$upscope $end
$scope module atomic $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 1 0" d $end
$var wire 1 #" en $end
$var wire 1 \" r $end
$var reg 1 O# q $end
$upscope $end
$scope module sc $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 1 <" d $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 1 P# q $end
$upscope $end
$scope module alu_op_x_id2ex $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 32 Q# d [31:0] $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 32 R# q [31:0] $end
$upscope $end
$scope module alu_op_y_id2ex $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 32 S# d [31:0] $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 32 T# q [31:0] $end
$upscope $end
$scope module alu_opcode_id2ex $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 4 U# d [3:0] $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 4 V# q [3:0] $end
$upscope $end
$scope module movn $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 1 H" d $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 1 W# q $end
$upscope $end
$scope module movz $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 1 J" d $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 1 X# q $end
$upscope $end
$scope module mem_write_data_id2ex $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 32 Y# d [31:0] $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 32 Z# q [31:0] $end
$upscope $end
$scope module mem_we_id2ex $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 1 [# d $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 1 \# q $end
$upscope $end
$scope module mem_read_id2ex $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 1 9" d $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 1 ]# q $end
$upscope $end
$scope module mem_byte_id2ex $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 1 2" d $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 1 ^# q $end
$upscope $end
$scope module mem_signextend_id2ex $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 1 ?" d $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 1 _# q $end
$upscope $end
$scope module reg_write_addr_id2ex $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 5 `# d [4:0] $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 5 a# q [4:0] $end
$upscope $end
$scope module reg_we_id2ex $end
$var wire 1 [" ar $end
$var wire 1 H clk $end
$var wire 1 P" d $end
$var wire 1 $" en $end
$var wire 1 \" r $end
$var reg 1 b# q $end
$upscope $end
$scope module x_stage $end
$var wire 1 c# add_check $end
$var wire 1 d# add_neg_over $end
$var wire 1 e# add_pos_over $end
$var wire 1 f# alu_neg $end
$var wire 32 g# alu_op_x [31:0] $end
$var wire 32 h# alu_op_x_signed [31:0] $end
$var wire 32 i# alu_op_y [31:0] $end
$var wire 32 j# alu_op_y_signed [31:0] $end
$var wire 1 z alu_op_y_zero $end
$var wire 4 k# alu_opcode [3:0] $end
$var wire 1 } alu_overflow $end
$var wire 1 l# sub_check $end
$var wire 1 m# sub_neg_over $end
$var wire 1 n# sub_pos_over $end
$var wire 1 o# x_neg $end
$var wire 1 p# y_neg $end
$var reg 32 q# alu_result [31:0] $end
$upscope $end
$scope module alu_result_ex2mem $end
$var wire 1 H clk $end
$var wire 32 r# d [31:0] $end
$var wire 1 $" en $end
$var wire 1 [" r $end
$var reg 32 s# q [31:0] $end
$upscope $end
$scope module mem_read_ex2mem $end
$var wire 1 H clk $end
$var wire 1 8" d $end
$var wire 1 $" en $end
$var wire 1 [" r $end
$var reg 1 t# q $end
$upscope $end
$scope module mem_byte_ex2mem $end
$var wire 1 H clk $end
$var wire 1 1" d $end
$var wire 1 $" en $end
$var wire 1 [" r $end
$var reg 1 u# q $end
$upscope $end
$scope module mem_signextend_ex2mem $end
$var wire 1 H clk $end
$var wire 1 >" d $end
$var wire 1 $" en $end
$var wire 1 [" r $end
$var reg 1 v# q $end
$upscope $end
$scope module reg_write_addr_ex2mem $end
$var wire 1 H clk $end
$var wire 5 w# d [4:0] $end
$var wire 1 $" en $end
$var wire 1 [" r $end
$var reg 5 x# q [4:0] $end
$upscope $end
$scope module reg_we_ex2mem $end
$var wire 1 H clk $end
$var wire 1 O" d $end
$var wire 1 $" en $end
$var wire 1 [" r $end
$var reg 1 y# q $end
$upscope $end
$scope module reg_write_data_mem2wb $end
$var wire 1 H clk $end
$var wire 32 z# d [31:0] $end
$var wire 1 $" en $end
$var wire 1 [" r $end
$var reg 32 {# q [31:0] $end
$upscope $end
$scope module reg_write_addr_mem2wb $end
$var wire 1 H clk $end
$var wire 5 |# d [4:0] $end
$var wire 1 $" en $end
$var wire 1 [" r $end
$var reg 5 }# q [4:0] $end
$upscope $end
$scope module reg_we_mem2wb $end
$var wire 1 H clk $end
$var wire 1 Q" d $end
$var wire 1 $" en $end
$var wire 1 [" r $end
$var reg 1 ~# q $end
$upscope $end
$scope module w_stage $end
$var wire 1 H clk $end
$var wire 1 $" en $end
$var wire 1 R" reg_we $end
$var wire 5 !$ reg_write_addr [4:0] $end
$var wire 32 "$ reg_write_data [31:0] $end
$var wire 5 #$ rs_addr [4:0] $end
$var wire 32 $$ rs_data [31:0] $end
$var wire 5 %$ rt_addr [4:0] $end
$var wire 32 &$ rt_data [31:0] $end
$upscope $end
$upscope $end
$scope module mips_local_store $end
$var wire 12 '$ addr [11:0] $end
$var wire 1 H clk $end
$var wire 32 ($ din [31:0] $end
$var wire 4 )$ we [3:0] $end
$var reg 32 *$ dout [31:0] $end
$scope begin column[0] $end
$upscope $end
$scope begin column[1] $end
$upscope $end
$scope begin column[2] $end
$upscope $end
$scope begin column[3] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx *$
b0 )$
b0 ($
b0 '$
bx &$
bx %$
bx $$
bx #$
b0 "$
b0 !$
0~#
b0 }#
b0 |#
b0 {#
b0 z#
0y#
b0 x#
b0 w#
0v#
0u#
0t#
b0 s#
b0 r#
b0 q#
0p#
0o#
0n#
0m#
0l#
b0 k#
b0 j#
b0 i#
b0 h#
b0 g#
0f#
0e#
0d#
0c#
0b#
b0 a#
bx `#
0_#
0^#
0]#
0\#
x[#
b0 Z#
bx Y#
0X#
0W#
b0 V#
b1101 U#
b0 T#
bx S#
b0 R#
bx Q#
0P#
0O#
b1101 N#
xM#
b0xxxxx L#
bx K#
bx J#
bx I#
bx H#
0G#
bx F#
bx E#
bx D#
bx C#
b0 B#
b0 A#
b0 @#
bx ?#
x>#
x=#
bx <#
b0 ;#
bx :#
bx 9#
bx 8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
bx {"
bx z"
b0xxxxxxxxxxxxxxxx y"
bx0000000000000000 x"
bx w"
bx v"
bx u"
0t"
b0 s"
bx r"
bx q"
0p"
b0 o"
bx n"
b0 m"
b0 l"
b0 k"
bx j"
bx i"
b100 h"
b0 g"
b0 f"
bx e"
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 d"
bx c"
bx b"
0a"
0`"
b0 _"
bx ^"
bx ]"
0\"
0["
bx Z"
bx Y"
b0 X"
b0 W"
b0 V"
b0 U"
bx T"
b0 S"
0R"
0Q"
xP"
0O"
0N"
b0 M"
b0 L"
b0 K"
xJ"
0I"
xH"
0G"
b0 F"
bx E"
b0 D"
b0 C"
xB"
0A"
0@"
x?"
0>"
0="
x<"
0;"
0:"
x9"
08"
bx 7"
b0xxxxxxxx 6"
bx 5"
bx 4"
03"
x2"
01"
00"
0/"
b0 ."
x-"
x,"
x+"
bx *"
b0 )"
b0 ("
bx '"
bx &"
1%"
1$"
x#"
b0 ""
b0 !"
b0 ~
0}
b1101 |
b0 {
1z
bx y
b0 x
bx w
b0 v
bx u
bx t
xs
xr
bx q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
bx i
bx h
0g
bx f
bx e
bx d
b0 c
b0 b
b0 a
0`
bx _
b0 ^
bx ]
b0 \
b0 [
bx Z
b0xxxxxxxxxxxxxxxxxxxx10 Y
0X
0W
1V
0U
0T
bx S
b0 R
b0 Q
b0 P
bx O
0N
b0 M
b0 L
bx K
0J
b0 I
0H
b0 G
b1 F
b0 E
b0xxxxxxxxxxxxxxxxxxxx10 D
b1110100011001010111001101110100011100110010111101110011011101000110000101101100011011000101111101101001011001000111001001110011010111110110010101111000001011110111010001100101011100110111010000101110011100100110010101110011011101010110110001110100 C
0B
b1 A
b1 @
b0 ?
b0 >
bx =
bx <
b0 ;
b100000000000000000 :
b1111101000 9
b11101000110010101110011011101000111001100101111011100110111010001100001011011000110110001011111011010010110010001110010011100110101111101100101011110000010111101100010011101010110100101101100011001000010111101100001011100000111000000101110011010000110010101111000 8
bx 7
bx 6
bx 5
bx 4
b1110100011001010111001101110100011100110010111101110011011101000110000101101100011011000101111101101001011001000111001001110011010111110110010101111000001011110111001101110100011100100110010101100001011011010111011101100001011101100110010100101110011101100110001101100100 3
b1 2
b0 1
00
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
bx )
bx (
bx '
b0 &
b0 %
bx $
b0 #
b0 "
bx !
$end
#5000
06#
b100 i"
b100 j"
b0 L#
b0 w
b0 q"
b0 Q#
07#
b0 D#
b0 F#
0.#
1-#
b0 *"
b0 e"
b0 8#
0+"
0'#
b10000000000000100000000000000000 y
b10000000000000100000000000000000 r"
b10000000000000100000000000000000 S#
1P"
0[#
0#"
b0 Z"
b0 E#
b0 $$
0!#
0~"
0"#
0##
0%#
0$#
b10000 T"
b10000 ?#
b10000 `#
0+#
0,"
0,#
00#
04#
02#
01#
05#
03#
b1100 N#
b1100 |
b1100 U#
b10000000000000100000000000000000 v"
b100000000000001100 b"
0}"
0&#
0)#
0-"
0*#
1M#
0=#
0>#
1/#
0|"
0B"
09"
02"
1?"
0<"
b1111 :#
b0 Y"
b0 C#
b0 #$
b10000 ]"
b10000 H#
b10000 %$
b10000 <#
b0 K#
0H"
0J"
b10 u"
b1000000000000010 y"
b11111111111111111000000000000010 w"
b10000000000000100000000000000000 x"
b1000000000000010 z"
b100001000000000000010 c"
b10000100000000000001000 d"
b111100000100001000000000000010 '"
b111100000100001000000000000010 {"
b111100000100001000000000000010 K
b111100000100001000000000000010 $
b111100000100001000000000000010 Z
b111100000100001000000000000010 &"
b111100000100001000000000000010 n"
bx S
bx *$
b0 u
b0 )
b0 i
b0 t
b0 (
b0 h
0s
0r
b0 q
10
1H
#10000
00
0H
#15000
bx *$
bx S
10
1H
#20000
1["
00
0H
b0xxxxxxxxxxxxxxxxxxxx00 D
b0xxxxxxxxxxxxxxxxxxxx00 Y
1B
1g
#25000
0V
b1000 i"
b1000 j"
bx ,
bx m
bx +
bx Q
bx -
bx n
0e#
1n#
1f#
b1 G
1O"
bx l
bx C"
bx ($
1p#
b10000000000000100000000000000000 q#
b10000000000000100000000000000000 ~
b10000000000000100000000000000000 s"
1W
b10000000000000100000000000000000 \
b10000000000000100000000000000000 ."
b10000000000000100000000000000000 ""
b10000000000000100000000000000000 r#
b1 %
b1 [
bx S
bx *$
1b#
1N"
b10000 a#
b10000 S"
b10000 @#
b10000 w#
1_#
1>"
bx Z#
bx D"
b1100 V#
b1100 {
b1100 k#
b10000000000000100000000000000000 T#
b10000000000000100000000000000000 j#
0z
b10000000000000100000000000000000 x
b10000000000000100000000000000000 i#
b111100000100001000000000000010 o"
b111100000100001000000000000010 )"
b100 k"
b100 M"
b100 f"
b100 l"
b100 ^
b100 K"
10
1H
#30000
00
0H
b1111100111 1
b0xxxxxxxxxxxxxxxxxxxx01 D
b0xxxxxxxxxxxxxxxxxxxx01 Y
#35000
b1 y
b1 r"
b1 S#
b10001 T"
b10001 ?#
b10001 `#
b11 N#
b11 |
b11 U#
b1 v"
b1100 i"
b1100 j"
1=#
0/#
1|"
b1101 :#
b10001 ]"
b10001 H#
b10001 %$
b0 <#
b1 u"
b1 y"
b1 w"
b10000000000000000 x"
b1 z"
b100010000000000000001 c"
b10001000000000000000100 d"
b10 G
b110100000100010000000000000001 '"
b110100000100010000000000000001 {"
b10 %
b10 [
b1 ("
b10000000000000100000000000000000 W"
b10000000000000100000000000000000 B#
b10000000000000100000000000000000 z#
bx 6"
bx *$
bx S
b110100000100010000000000000001 K
b110100000100010000000000000001 $
b110100000100010000000000000001 Z
b110100000100010000000000000001 &"
b110100000100010000000000000001 n"
b1000 k"
b1000 M"
b1000 f"
b1000 l"
b1000 ^
b1000 K"
b100 m"
b1100 b"
b1000 h"
b100 L"
b100 g"
b100 ;#
b10000000000000100000000000000000 s#
b10000000000000100000000000000000 !"
1v#
1@"
b10000 x#
b10000 U"
b10000 A#
b10000 |#
1y#
1Q"
10
1H
#40000
00
0H
b1111100110 1
#45000
b11001000010000 y
b11001000010000 r"
b11001000010000 S#
b11001000010000 v"
b1000 T"
b1000 ?#
b1000 `#
1V
b10000 i"
b10000 j"
b1000 ]"
b1000 H#
b1000 %$
b110 <#
b1000 K#
b10000 u"
b11001000010000 y"
b11001000010000 w"
b110010000100000000000000000000 x"
b11001000010000 z"
b10000011001000010000 c"
b1000001100100001000000 d"
0f#
b11 G
b110100000010000011001000010000 '"
b110100000010000011001000010000 {"
0n#
0p#
b1 q#
b1 ~
b1 s"
0U
0W
b1 \
b1 ."
b1 ""
b1 r#
b10 ("
b11 %
b11 [
b110100000010000011001000010000 K
b110100000010000011001000010000 $
b110100000010000011001000010000 Z
b110100000010000011001000010000 &"
b110100000010000011001000010000 n"
bx S
bx *$
1~#
1R"
b10000 }#
b10000 V"
b10000 !$
b10000000000000100000000000000000 {#
b10000000000000100000000000000000 X"
b10000000000000100000000000000000 "$
b10001 a#
b10001 S"
b10001 @#
b10001 w#
b11 V#
b11 {
b11 k#
b1 T#
b1 j#
b1 x
b1 i#
b110100000100010000000000000001 o"
b110100000100010000000000000001 )"
b1000 m"
b1100100001001100 b"
b1100 h"
b1000 L"
b1000 g"
b1000 ;#
b1100 k"
b1100 M"
b1100 f"
b1100 l"
b1100 ^
b1100 K"
10
1H
#50000
00
0H
b1111100101 1
#55000
b1111111111111111 y
b1111111111111111 r"
b1111111111111111 S#
b1111111111111111 v"
b1001 T"
b1001 ?#
b1001 `#
b10100 i"
b10100 j"
b110010000100 "
b110010000100 L
b1001 ]"
b1001 H#
b1001 %$
b11111 <#
b11111 K#
b111111 u"
b1111111111111111 y"
b11111111111111111111111111111111 w"
b11111111111111110000000000000000 x"
b1111111111111111 z"
b10011111111111111111 c"
b1001111111111111111100 d"
b100 G
b110010000100 '$
b110010000100 j
b110010000100 *
b110010000100 k
b110010000100 b
b110010000100 &
b110010000100 c
b110100000010011111111111111111 '"
b110100000010011111111111111111 {"
b100 %
b100 [
b11 ("
b11001000010000 q#
b11001000010000 ~
b11001000010000 s"
b11001000010000 \
b11001000010000 ."
b11001000010000 ""
b11001000010000 r#
b1 W"
b1 B#
b1 z#
bx *$
bx S
b110100000010011111111111111111 K
b110100000010011111111111111111 $
b110100000010011111111111111111 Z
b110100000010011111111111111111 &"
b110100000010011111111111111111 n"
b10000 k"
b10000 M"
b10000 f"
b10000 l"
b10000 ^
b10000 K"
b1100 m"
b1000000000000001100 b"
b10000 h"
b1100 L"
b1100 g"
b1100 ;#
b110100000010000011001000010000 o"
b110100000010000011001000010000 )"
b11001000010000 T#
b11001000010000 j#
b11001000010000 x
b11001000010000 i#
b1000 a#
b1000 S"
b1000 @#
b1000 w#
b1 s#
b1 !"
b10001 x#
b10001 U"
b10001 A#
b10001 |#
10
1H
#60000
00
0H
b1111100100 1
#65000
b1111111111111110 y
b1111111111111110 r"
b1111111111111110 S#
b1111111111111110 v"
b1010 T"
b1010 ?#
b1010 `#
b11111111111111 "
b11111111111111 L
b11000 i"
b11000 j"
b1010 ]"
b1010 H#
b1010 %$
b111110 u"
b1111111111111110 y"
b11111111111111111111111111111110 w"
b11111111111111100000000000000000 x"
b1111111111111110 z"
b10101111111111111110 c"
b1010111111111111111000 d"
b111111111111 '$
b11111111111111 j
b11111111111111 *
b11111111111111 k
b11111111111111 b
b11111111111111 &
b11111111111111 c
b101 G
b110100000010101111111111111110 '"
b110100000010101111111111111110 {"
b11001000010000 W"
b11001000010000 B#
b11001000010000 z#
b1111111111111111 q#
b1111111111111111 ~
b1111111111111111 s"
b1111111111111111 \
b1111111111111111 ."
b1111111111111111 ""
b1111111111111111 r#
b100 ("
b101 %
b101 [
b110100000010101111111111111110 K
b110100000010101111111111111110 $
b110100000010101111111111111110 Z
b110100000010101111111111111110 &"
b110100000010101111111111111110 n"
bx S
bx *$
b10001 }#
b10001 V"
b10001 !$
b1 {#
b1 X"
b1 "$
b1000 x#
b1000 U"
b1000 A#
b1000 |#
b11001000010000 s#
b11001000010000 !"
b1001 a#
b1001 S"
b1001 @#
b1001 w#
b1111111111111111 T#
b1111111111111111 j#
b1111111111111111 x
b1111111111111111 i#
b110100000010011111111111111111 o"
b110100000010011111111111111111 )"
b10000 m"
b1000000000000001100 b"
b10100 h"
b10000 L"
b10000 g"
b10000 ;#
b10100 k"
b10100 M"
b10100 f"
b10100 l"
b10100 ^
b10100 K"
10
1H
#70000
00
0H
b1111100011 1
#75000
16#
17#
0=#
b0 v"
b0 y
b0 r"
b0 S#
b0 T"
b0 ?#
b0 `#
b0 E"
b0 9#
b0 Y#
b0 I#
1(#
b0 ^"
b0 J#
b0 &$
10#
b1010 N#
b1010 |
b1010 U#
b11100 i"
b11100 j"
0M#
1>#
0|"
b0 :#
b0 ]"
b0 H#
b0 %$
b0 <#
b0 K#
b0 u"
b0 y"
b0 w"
b0 x"
b0 z"
b0 c"
b0 d"
b110 G
b0 '"
b0 {"
b110 %
b110 [
b101 ("
b1111111111111110 q#
b1111111111111110 ~
b1111111111111110 s"
b1111111111111110 \
b1111111111111110 ."
b1111111111111110 ""
b1111111111111110 r#
b1111111111111111 W"
b1111111111111111 B#
b1111111111111111 z#
bx *$
bx S
b0 K
b0 $
b0 Z
b0 &"
b0 n"
b11000 k"
b11000 M"
b11000 f"
b11000 l"
b11000 ^
b11000 K"
b10100 m"
b11000 b"
b11000 h"
b10100 L"
b10100 g"
b10100 ;#
b110100000010101111111111111110 o"
b110100000010101111111111111110 )"
b1111111111111110 T#
b1111111111111110 j#
b1111111111111110 x
b1111111111111110 i#
b1010 a#
b1010 S"
b1010 @#
b1010 w#
b1111111111111111 s#
b1111111111111111 !"
b1001 x#
b1001 U"
b1001 A#
b1001 |#
b11001000010000 {#
b11001000010000 X"
b11001000010000 "$
b1000 }#
b1000 V"
b1000 !$
10
1H
#80000
00
0H
b1111100010 1
#85000
b0 "
b0 L
b100000 i"
b100000 j"
b0 ,
b0 m
b0 +
b0 Q
b0 -
b0 n
b0 '$
b0 j
b0 *
b0 k
b0 b
b0 &
b0 c
b111 G
b1111111111111110 W"
b1111111111111110 B#
b1111111111111110 z#
b0 l
b0 C"
b0 ($
b0 q#
b0 ~
b0 s"
b0 \
b0 ."
b0 ""
b0 r#
b110 ("
b111 %
b111 [
bx S
bx *$
b1001 }#
b1001 V"
b1001 !$
b1111111111111111 {#
b1111111111111111 X"
b1111111111111111 "$
b1010 x#
b1010 U"
b1010 A#
b1010 |#
b1111111111111110 s#
b1111111111111110 !"
b0 a#
b0 S"
b0 @#
b0 w#
b0 Z#
b0 D"
b1010 V#
b1010 {
b1010 k#
b0 T#
b0 j#
1z
b0 x
b0 i#
b0 o"
b0 )"
b11000 m"
b11100 b"
b11100 h"
b11000 L"
b11000 g"
b11000 ;#
b11100 k"
b11100 M"
b11100 f"
b11100 l"
b11100 ^
b11100 K"
10
1H
#90000
00
0H
b1111100001 1
#95000
b100100 i"
b100100 j"
b1000 G
b1000 %
b1000 [
b111 ("
b0 W"
b0 B#
b0 z#
bx *$
bx S
b100000 k"
b100000 M"
b100000 f"
b100000 l"
b100000 ^
b100000 K"
b11100 m"
b100000 b"
b100000 h"
b11100 L"
b11100 g"
b11100 ;#
b0 s#
b0 !"
b0 x#
b0 U"
b0 A#
b0 |#
b1111111111111110 {#
b1111111111111110 X"
b1111111111111110 "$
b1010 }#
b1010 V"
b1010 !$
10
1H
#100000
00
0H
b1111100000 1
#105000
b101000 i"
b101000 j"
b1001 G
b1000 ("
b1001 %
b1001 [
bx S
bx *$
b0 }#
b0 V"
b0 !$
b0 {#
b0 X"
b0 "$
b100000 m"
b100100 b"
b100100 h"
b100000 L"
b100000 g"
b100000 ;#
b100100 k"
b100100 M"
b100100 f"
b100100 l"
b100100 ^
b100100 K"
10
1H
#110000
00
0H
b1111011111 1
#115000
b11001000010000 w
b11001000010000 q"
b11001000010000 Q#
06#
b10000 L#
b11001000010000 D#
b11001000010000 F#
0-#
b11001000010000 *"
b11001000010000 e"
b11001000010000 8#
07#
1=#
b11001000010000 Z"
b11001000010000 E#
b11001000010000 $$
b1111111111111111 E"
b1111111111111111 9#
b1111111111111111 Y#
b1111111111111111 I#
0(#
b1111111111111111 ^"
b1111111111111111 J#
b1111111111111111 &$
00#
b1001 T"
b1001 ?#
b1001 `#
0P"
1[#
b1101 N#
b1101 |
b1101 U#
b101100 i"
b101100 j"
1M#
1B"
b101011 :#
0t"
b1000 Y"
b1000 C#
b1000 #$
b1001 ]"
b1001 H#
b1001 %$
b1000010010000000000000000 c"
b100001001000000000000000000 d"
b1010 G
b10101101000010010000000000000000 '"
b10101101000010010000000000000000 {"
b1010 %
b1010 [
b1001 ("
bx *$
bx S
b10101101000010010000000000000000 K
b10101101000010010000000000000000 $
b10101101000010010000000000000000 Z
b10101101000010010000000000000000 &"
b10101101000010010000000000000000 n"
b101000 k"
b101000 M"
b101000 f"
b101000 l"
b101000 ^
b101000 K"
b100100 m"
b101000 b"
b101000 h"
b100100 L"
b100100 g"
b100100 ;#
10
1H
#120000
00
0H
b1111011110 1
#125000
16#
b0 L#
17#
0=#
b0 w
b0 q"
b0 Q#
1(#
b0 D#
b0 F#
1-#
b0 *"
b0 e"
b0 8#
10#
1P"
0[#
b1010 N#
b1010 |
b1010 U#
b0 Z"
b0 E#
b0 $$
b0 T"
b0 ?#
b0 `#
b0 E"
b0 9#
b0 Y#
b0 I#
b0 ^"
b0 J#
b0 &$
b110010000100 "
b110010000100 L
b110000 i"
b110000 j"
0M#
0B"
b0 :#
b0 Y"
b0 C#
b0 #$
b0 ]"
b0 H#
b0 %$
b0 c"
b0 d"
b1111 )$
b1111111111111111 +
b1111111111111111 Q
b1111111111111111 -
b1111111111111111 n
b110010000100 '$
b110010000100 j
b110010000100 *
b110010000100 k
b110010000100 b
b110010000100 &
b110010000100 c
b1011 G
b0 '"
b0 {"
0O"
b1111 a
b1111 F"
b1111111111111111 l
b1111111111111111 C"
b1111111111111111 ($
b11001000010000 q#
b11001000010000 ~
b11001000010000 s"
b11001000010000 \
b11001000010000 ."
b11001000010000 ""
b11001000010000 r#
b1010 ("
b1011 %
b1011 [
b0 K
b0 $
b0 Z
b0 &"
b0 n"
bx S
bx *$
0b#
0N"
b1001 a#
b1001 S"
b1001 @#
b1001 w#
1\#
1A"
b1111111111111111 Z#
b1111111111111111 D"
b1101 V#
1c#
b1101 {
b1101 k#
b11001000010000 R#
b11001000010000 h#
b11001000010000 v
b11001000010000 g#
b10101101000010010000000000000000 o"
b10101101000010010000000000000000 )"
b101000 m"
b101100 b"
b101100 h"
b101000 L"
b101000 g"
b101000 ;#
b101100 k"
b101100 M"
b101100 f"
b101100 l"
b101100 ^
b101100 K"
10
1H
#130000
00
0H
b1111011101 1
#135000
b0 6"
b0 7"
b1111111111111111 4"
b110100 i"
b110100 j"
b0 "
b0 L
b1111111111111111 _
b1111111111111111 5"
b1100 G
b0 '$
b0 j
b0 *
b0 k
b0 b
b0 &
b0 c
b0 +
b0 Q
b0 -
b0 n
b0 )$
b1100 %
b1100 [
b1011 ("
b0 q#
b0 ~
b0 s"
b0 \
b0 ."
b0 ""
b0 r#
b0 l
b0 C"
b0 ($
b0 a
b0 F"
1O"
b11001000010000 W"
b11001000010000 B#
b11001000010000 z#
b1111111111111111 *$
b1111111111111111 ]
bx S
b110000 k"
b110000 M"
b110000 f"
b110000 l"
b110000 ^
b110000 K"
b101100 m"
b110000 b"
b110000 h"
b101100 L"
b101100 g"
b101100 ;#
b0 o"
b0 )"
b0 R#
b0 h#
b0 v
b0 g#
b1010 V#
0c#
b1010 {
b1010 k#
b0 Z#
b0 D"
0\#
0A"
b0 a#
b0 S"
b0 @#
b0 w#
1b#
1N"
b11001000010000 s#
b11001000010000 !"
b1001 x#
b1001 U"
b1001 A#
b1001 |#
0y#
0Q"
10
1H
#140000
00
0H
b1111011100 1
#145000
bx 6"
bx 7"
bx 4"
b111000 i"
b111000 j"
bx _
bx 5"
b1101 G
b0 W"
b0 B#
b0 z#
b1100 ("
b1101 %
b1101 [
bx S
bx *$
bx ]
0~#
0R"
b1001 }#
b1001 V"
b1001 !$
b11001000010000 {#
b11001000010000 X"
b11001000010000 "$
1y#
1Q"
b0 x#
b0 U"
b0 A#
b0 |#
b0 s#
b0 !"
b110000 m"
b110100 b"
b110100 h"
b110000 L"
b110000 g"
b110000 ;#
b110100 k"
b110100 M"
b110100 f"
b110100 l"
b110100 ^
b110100 K"
10
1H
#150000
00
0H
b1111011011 1
#155000
b111100 i"
b111100 j"
b1110 G
b1110 %
b1110 [
b1101 ("
bx *$
bx S
b111000 k"
b111000 M"
b111000 f"
b111000 l"
b111000 ^
b111000 K"
b110100 m"
b111000 b"
b111000 h"
b110100 L"
b110100 g"
b110100 ;#
b0 {#
b0 X"
b0 "$
b0 }#
b0 V"
b0 !$
1~#
1R"
10
1H
#160000
00
0H
b1111011010 1
#165000
b1000000 i"
b1000000 j"
b1111 G
b1110 ("
b1111 %
b1111 [
bx S
bx *$
b111000 m"
b111100 b"
b111100 h"
b111000 L"
b111000 g"
b111000 ;#
b111100 k"
b111100 M"
b111100 f"
b111100 l"
b111100 ^
b111100 K"
10
1H
#170000
00
0H
b1111011001 1
#175000
b11001000010000 w
b11001000010000 q"
b11001000010000 Q#
06#
b10000 L#
b11001000010000 D#
b11001000010000 F#
0-#
b11001000010000 *"
b11001000010000 e"
b11001000010000 8#
07#
1=#
b11001000010000 Z"
b11001000010000 E#
b11001000010000 $$
bx E"
bx 9#
bx Y#
bx I#
x(#
bx ^"
bx J#
bx &$
00#
b1011 T"
b1011 ?#
b1011 `#
1#"
b1101 N#
b1101 |
b1101 U#
b1000100 i"
b1000100 j"
1M#
0>#
19"
b100011 :#
0t"
b1000 Y"
b1000 C#
b1000 #$
b1011 ]"
b1011 H#
b1011 %$
b1000010110000000000000000 c"
b100001011000000000000000000 d"
b10000 G
b10001101000010110000000000000000 '"
b10001101000010110000000000000000 {"
b10000 %
b10000 [
b1111 ("
bx *$
bx S
b10001101000010110000000000000000 K
b10001101000010110000000000000000 $
b10001101000010110000000000000000 Z
b10001101000010110000000000000000 &"
b10001101000010110000000000000000 n"
b1000000 k"
b1000000 M"
b1000000 f"
b1000000 l"
b1000000 ^
b1000000 K"
b111100 m"
b1000000 b"
b1000000 h"
b111100 L"
b111100 g"
b111100 ;#
10
1H
#180000
00
0H
b1111011000 1
#185000
b0xxxxx L#
bx w
bx q"
bx Q#
0%"
bx D#
bx F#
x.#
x-#
bx *"
bx e"
bx 8#
1\"
bx Z"
bx E#
bx $$
b1111111111111110 E"
b1111111111111110 9#
b1111111111111110 Y#
b1111111111111110 I#
x(#
b1111111111111110 ^"
b1111111111111110 J#
b1111111111111110 &$
b110000000100110 v"
b1111111111111110 y
b1111111111111110 r"
b1111111111111110 S#
0#"
1`"
b1100 T"
b1100 ?#
b1100 `#
b10 N#
b10 |
b10 U#
b110010000100 "
b110010000100 L
b1001000 i"
b1001000 j"
0M#
1>#
09"
b0 :#
1G#
b1011 Y"
b1011 C#
b1011 #$
b1010 ]"
b1010 H#
b1010 %$
b1100 <#
b100110 u"
b110000000100110 y"
b110000000100110 w"
b1100000001001100000000000000000 x"
b110000000100110 z"
b1011010100110000000100110 c"
b101101010011000000010011000 d"
bx ,
bx m
bx +
bx Q
bx -
bx n
b110010000100 '$
b110010000100 j
b110010000100 *
b110010000100 k
b110010000100 b
b110010000100 &
b110010000100 c
b10001 G
b1011010100110000000100110 '"
b1011010100110000000100110 {"
bx l
bx C"
bx ($
b11001000010000 q#
b11001000010000 ~
b11001000010000 s"
b11001000010000 \
b11001000010000 ."
b11001000010000 ""
b11001000010000 r#
b10000 ("
b10001 %
b10001 [
b1011010100110000000100110 K
b1011010100110000000100110 $
b1011010100110000000100110 Z
b1011010100110000000100110 &"
b1011010100110000000100110 n"
bx S
bx *$
b1011 a#
b1011 S"
b1011 @#
b1011 w#
1]#
18"
1`
bx Z#
bx D"
b1101 V#
1c#
b1101 {
b1101 k#
b11001000010000 R#
b11001000010000 h#
b11001000010000 v
b11001000010000 g#
b10001101000010110000000000000000 o"
b10001101000010110000000000000000 )"
b1000000 m"
b11000000011011100 b"
b1000100 h"
b1000000 L"
b1000000 g"
b1000000 ;#
b1000100 k"
b1000100 M"
b1000100 f"
b1000100 l"
b1000100 ^
b1000100 K"
10
1H
#190000
00
0H
b1111010111 1
#195000
b0 6"
b0 7"
b1111111111111111 4"
b0 "
b0 L
1%"
b11111 L#
b1111111111111111 _
b1111111111111111 5"
b0 '$
b0 j
b0 *
b0 k
b0 b
b0 &
b0 c
b0 ,
b0 m
b0 +
b0 Q
b0 -
b0 n
0\"
b1111111111111111 w
b1111111111111111 q"
b1111111111111111 Q#
b0 q#
b0 ~
b0 s"
b0 \
b0 ."
b0 ""
b0 r#
b0 l
b0 C"
b0 ($
0`"
0O"
b1111111111111111 W"
b1111111111111111 B#
b1111111111111111 z#
0(#
b1111111111111111 D#
b1111111111111111 F#
0.#
0-#
b1111111111111111 *"
b1111111111111111 e"
b1111111111111111 8#
b1111111111111111 *$
b1111111111111111 ]
bx S
b0 K
b0 $
b0 Z
b0 &"
b0 n"
b1011010100110000000100110 o"
b1011010100110000000100110 )"
1p"
1a"
b0 R#
b0 h#
b0 v
b0 g#
b0 V#
0c#
b0 {
b0 k#
b0 Z#
b0 D"
0]#
08"
0`
0_#
0>"
b0 a#
0G#
b0 S"
b0 @#
b0 w#
0b#
0N"
b11001000010000 s#
b11001000010000 !"
1t#
1:"
b1011 x#
1t"
b1011 U"
b1011 A#
b1011 |#
10
1H
#200000
00
0H
b1111010110 1
#205000
16#
17#
0=#
b0xxxxxxxx 6"
bx 7"
b0 y
b0 r"
b0 S#
b0 v"
bx 4"
b0 L#
b0 Z"
b0 E#
b0 $$
b0 E"
b0 9#
b0 Y#
b0 I#
b0 ^"
b0 J#
b0 &$
b0 T"
b0 ?#
b0 `#
10#
b1010 N#
b1010 |
b1010 U#
b1001100 i"
b1001100 j"
bx _
bx 5"
b0 w
b0 q"
b0 Q#
b1111111111111110 +
b1111111111111110 Q
b1111111111111110 -
b1111111111111110 n
b0 Y"
b0 C#
b0 #$
b0 ]"
b0 H#
b0 %$
b0 <#
b0 u"
b0 y"
b0 w"
b0 x"
b0 z"
b0 c"
b0 d"
b10010 G
1(#
b0 D#
b0 F#
0.#
1-#
b0 *"
b0 e"
b0 8#
b0 W"
b0 B#
b0 z#
1O"
b1111111111111110 l
b1111111111111110 C"
b1111111111111110 ($
b1 q#
b1 ~
b1 s"
b1 \
b1 ."
b1 ""
b1 r#
b0 '"
b0 {"
b10001 ("
b10010 %
b10010 [
bx S
bx *$
bx ]
b1011 }#
b1011 V"
b1011 !$
b1111111111111111 {#
b1111111111111111 X"
b1111111111111111 "$
0y#
0Q"
b0 x#
0t"
b0 U"
b0 A#
b0 |#
0v#
0@"
0t#
0:"
b0 s#
b0 !"
1b#
1N"
b1100 a#
b1100 S"
b1100 @#
b1100 w#
1_#
1>"
b1111111111111110 Z#
b1111111111111110 D"
b10 V#
b10 {
b10 k#
b1111111111111110 T#
b1111111111111110 j#
0z
b1111111111111110 x
b1111111111111110 i#
b1111111111111111 R#
b1111111111111111 h#
b1111111111111111 v
b1111111111111111 g#
0p"
0a"
b0 o"
b0 )"
b1000100 m"
b1001000 b"
b1001000 h"
b1000100 L"
b1000100 g"
b1000100 ;#
b1001000 k"
b1001000 M"
b1001000 f"
b1001000 l"
b1001000 ^
b1001000 K"
10
1H
#210000
00
0H
b1111010101 1
#215000
b1010000 i"
b1010000 j"
b10011 G
b0 +
b0 Q
b0 -
b0 n
b10011 %
b10011 [
b10010 ("
b0 q#
b0 ~
b0 s"
b0 \
b0 ."
b0 ""
b0 r#
b0 l
b0 C"
b0 ($
b1 W"
b1 B#
b1 z#
bx 6"
bx *$
bx S
b1001100 k"
b1001100 M"
b1001100 f"
b1001100 l"
b1001100 ^
b1001100 K"
b1001000 m"
b1001100 b"
b1001100 h"
b1001000 L"
b1001000 g"
b1001000 ;#
b0 R#
b0 h#
b0 v
b0 g#
b0 T#
b0 j#
1z
b0 x
b0 i#
b1010 V#
b1010 {
b1010 k#
b0 Z#
b0 D"
b0 a#
b0 S"
b0 @#
b0 w#
b1 s#
b1 !"
1v#
1@"
b1100 x#
b1100 U"
b1100 A#
b1100 |#
1y#
1Q"
b0 {#
b0 X"
b0 "$
b0 }#
b0 V"
b0 !$
0~#
0R"
10
1H
#220000
00
0H
b1111010100 1
#225000
b1010100 i"
b1010100 j"
b10100 G
b0 W"
b0 B#
b0 z#
b10011 ("
b10100 %
b10100 [
bx S
bx *$
1~#
1R"
b1100 }#
b1100 V"
b1100 !$
b1 {#
b1 X"
b1 "$
b0 x#
b0 U"
b0 A#
b0 |#
b0 s#
b0 !"
b1001100 m"
b1010000 b"
b1010000 h"
b1001100 L"
b1001100 g"
b1001100 ;#
b1010000 k"
b1010000 M"
b1010000 f"
b1010000 l"
b1010000 ^
b1010000 K"
10
1H
#230000
00
0H
b1111010011 1
#235000
b1011000 i"
b1011000 j"
b10101 G
b10101 %
b10101 [
b10100 ("
bx *$
bx S
b1010100 k"
b1010100 M"
b1010100 f"
b1010100 l"
b1010100 ^
b1010100 K"
b1010000 m"
b1010100 b"
b1010100 h"
b1010000 L"
b1010000 g"
b1010000 ;#
b0 {#
b0 X"
b0 "$
b0 }#
b0 V"
b0 !$
10
1H
#240000
00
0H
b1111010010 1
#245000
b1011100 i"
b1011100 j"
b10110 G
b10101 ("
b10110 %
b10110 [
bx S
bx *$
b1010100 m"
b1011000 b"
b1011000 h"
b1010100 L"
b1010100 g"
b1010100 ;#
b1011000 k"
b1011000 M"
b1011000 f"
b1011000 l"
b1011000 ^
b1011000 K"
10
1H
#250000
00
0H
b1111010001 1
#255000
b10000000000000100000000000000000 w
b10000000000000100000000000000000 q"
b10000000000000100000000000000000 Q#
06#
b10000000000000100000000000000000 D#
b10000000000000100000000000000000 F#
1.#
b10000000000000100000000000000000 *"
b10000000000000100000000000000000 e"
b10000000000000100000000000000000 8#
b10000000000000100000000000000000 Z"
b10000000000000100000000000000000 E#
b10000000000000100000000000000000 $$
b1 E"
b1 9#
b1 Y#
b1 I#
0(#
b1 ^"
b1 J#
b1 &$
07#
1=#
b100 y
b100 r"
b100 S#
b100 v"
b1100 T"
b1100 ?#
b1100 `#
0P"
1[#
00#
b1101 N#
b1101 |
b1101 U#
b1100000 i"
b1100000 j"
1M#
1B"
b101011 :#
0t"
b10000 Y"
b10000 C#
b10000 #$
b1100 ]"
b1100 H#
b1100 %$
b100 u"
b100 y"
b100 w"
b1000000000000000000 x"
b100 z"
b10000011000000000000000100 c"
b1000001100000000000000010000 d"
b10111 G
b10101110000011000000000000000100 '"
b10101110000011000000000000000100 {"
b10111 %
b10111 [
b10110 ("
bx *$
bx S
b10101110000011000000000000000100 K
b10101110000011000000000000000100 $
b10101110000011000000000000000100 Z
b10101110000011000000000000000100 &"
b10101110000011000000000000000100 n"
b1011100 k"
b1011100 M"
b1011100 f"
b1011100 l"
b1011100 ^
b1011100 K"
b1011000 m"
b1101100 b"
b1011100 h"
b1011000 L"
b1011000 g"
b1011000 ;#
10
1H
#260000
00
0H
b1111010000 1
#265000
b0 y
b0 r"
b0 S#
b0 v"
b10001 T"
b10001 ?#
b10001 `#
0V
b1 "
b1 L
b1100100 i"
b1100100 j"
b10001 ]"
b10001 H#
b10001 %$
b0 u"
b0 y"
b0 w"
b0 x"
b0 z"
b10000100010000000000000000 c"
b1000010001000000000000000000 d"
b0 )$
b1 +
b1 Q
b1 -
b1 n
0e#
1f#
b1 '$
b1 j
b1 *
b1 k
b1 b
b1 &
b1 c
b11000 G
b10101110000100010000000000000000 '"
b10101110000100010000000000000000 {"
0O"
b1111 a
b1111 F"
b1 l
b1 C"
b1 ($
0m#
1o#
b10000000000000100000000000000100 q#
b10000000000000100000000000000100 ~
b10000000000000100000000000000100 s"
1X
b10000000000000100000000000000100 \
b10000000000000100000000000000100 ."
b10000000000000100000000000000100 ""
b10000000000000100000000000000100 r#
b10111 ("
b11000 %
b11000 [
b10101110000100010000000000000000 K
b10101110000100010000000000000000 $
b10101110000100010000000000000000 Z
b10101110000100010000000000000000 &"
b10101110000100010000000000000000 n"
bx S
bx *$
0b#
0N"
b1100 a#
b1100 S"
b1100 @#
b1100 w#
1\#
1A"
b1 Z#
b1 D"
b1101 V#
1c#
b1101 {
b1101 k#
b100 T#
b100 j#
0z
b100 x
b100 i#
b10000000000000100000000000000000 R#
b10000000000000100000000000000000 h#
b10000000000000100000000000000000 v
b10000000000000100000000000000000 g#
b10101110000011000000000000000100 o"
b10101110000011000000000000000100 )"
b1011100 m"
b1100000 b"
b1100000 h"
b1011100 L"
b1011100 g"
b1011100 ;#
b1100000 k"
b1100000 M"
b1100000 f"
b1100000 l"
b1100000 ^
b1100000 K"
10
1H
#270000
00
0H
b1111001111 1
#275000
b0 w
b0 q"
b0 Q#
b11000 y
b11000 r"
b11000 S#
1(#
b0 D#
b0 F#
0.#
b0 *"
b0 e"
b0 8#
b11000 v"
0[#
b0 Z"
b0 E#
b0 $$
b0 T"
b0 ?#
b0 `#
b0 E"
b0 9#
b0 Y#
b0 I#
b0 ^"
b0 J#
b0 &$
b1111 N#
b1111 |
b1111 U#
b1100000 i"
b1100000 j"
b0 "
b0 L
1)#
0=#
0>#
1-"
0B"
b10 :#
b0 Y"
b0 C#
b0 #$
b0 ]"
b0 H#
b0 %$
b11000 u"
b11000 y"
b11000 w"
b110000000000000000000 x"
b11000 z"
b11000 c"
b1100000 d"
b11001 G
b0 '$
b0 j
b0 *
b0 k
b0 b
b0 &
b0 c
b1000000000000000000000011000 '"
b1000000000000000000000011000 {"
b11001 %
b11001 [
b11000 ("
b10000000000000100000000000000000 q#
b10000000000000100000000000000000 ~
b10000000000000100000000000000000 s"
0X
1W
b10000000000000100000000000000000 \
b10000000000000100000000000000000 ."
b10000000000000100000000000000000 ""
b10000000000000100000000000000000 r#
b10000000000000100000000000000100 W"
b10000000000000100000000000000100 B#
b10000000000000100000000000000100 z#
b1 u
b1 )
b1 i
bx *$
bx S
b1000000000000000000000011000 K
b1000000000000000000000011000 $
b1000000000000000000000011000 Z
b1000000000000000000000011000 &"
b1000000000000000000000011000 n"
b1100100 k"
b1100100 M"
b1100100 f"
b1100100 l"
b1100100 ^
b1100100 K"
b1100000 m"
b11000100 b"
b1100100 h"
b1100000 L"
b1100000 g"
b1100000 ;#
b10101110000100010000000000000000 o"
b10101110000100010000000000000000 )"
b0 T#
b0 j#
1z
b0 x
b0 i#
b10001 a#
b10001 S"
b10001 @#
b10001 w#
b10000000000000100000000000000100 s#
b10000000000000100000000000000100 !"
b1100 x#
b1100 U"
b1100 A#
b1100 |#
0y#
0Q"
10
1H
#280000
00
0H
b1111001110 1
#285000
16#
17#
b0 v"
b0 y
b0 r"
b0 S#
10#
b1010 N#
b1010 |
b1010 U#
b1100100 i"
b1100100 j"
1V
1P"
0)#
0=#
1>#
0-"
0M#
b0 :#
b0 u"
b0 y"
b0 w"
b0 x"
b0 z"
b0 c"
b0 d"
b0 +
b0 Q
b0 -
b0 n
0f#
b0 .
b0 o
b0 R
b0 /
b0 p
b11000 G
b0 '"
b0 {"
b10000000000000100000000000000000 W"
b10000000000000100000000000000000 B#
b10000000000000100000000000000000 z#
b0 a
b0 F"
b0 l
b0 C"
b0 ($
0o#
b0 q#
b0 ~
b0 s"
0U
0W
b0 \
b0 ."
b0 ""
b0 r#
b11001 ("
b11000 %
b11000 [
b0 K
b0 $
b0 Z
b0 &"
b0 n"
bx S
bx *$
b1 t
b1 (
b1 h
0~#
0R"
b1100 }#
b1100 V"
b1100 !$
b10000000000000100000000000000100 {#
b10000000000000100000000000000100 X"
b10000000000000100000000000000100 "$
b10001 x#
b10001 U"
b10001 A#
b10001 |#
b10000000000000100000000000000000 s#
b10000000000000100000000000000000 !"
b0 a#
b0 S"
b0 @#
b0 w#
0\#
0A"
b0 Z#
b0 D"
b1111 V#
0c#
b1111 {
b1111 k#
b11000 T#
b11000 j#
0z
b11000 x
b11000 i#
b0 R#
b0 h#
b0 v
b0 g#
b1000000000000000000000011000 o"
b1000000000000000000000011000 )"
b1100100 m"
b1101000 b"
b1101000 h"
b1100100 L"
b1100100 g"
b1100100 ;#
b1100000 k"
b1100000 M"
b1100000 f"
b1100000 l"
b1100000 ^
b1100000 K"
10
1H
#290000
00
0H
b10000000000000000000000000000011 4
b0xxxxxxxxxxxxxxxxxxxx00 D
b0xxxxxxxxxxxxxxxxxxxx00 Y
